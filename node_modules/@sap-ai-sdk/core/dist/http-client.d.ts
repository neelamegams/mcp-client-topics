import type { HttpDestinationOrFetchOptions } from '@sap-cloud-sdk/connectivity';
import type { HttpRequestConfig, HttpResponse } from '@sap-cloud-sdk/http-client';
/**
 * The type for parameters in custom request configuration.
 */
export type CustomRequestConfig = Pick<HttpRequestConfig, 'headers' | 'params' | 'middleware' | 'maxContentLength' | 'proxy' | 'httpAgent' | 'httpsAgent' | 'parameterEncoder'> & Record<string, any>;
/**
 * The options to call an endpoint.
 */
export interface EndpointOptions {
    /**
     * The specific endpoint to call.
     */
    url: string;
    /**
     * The API version to use.
     */
    apiVersion?: string;
    /**
     * The resource group to use.
     */
    resourceGroup?: string;
}
/**
 * Executes a request to the AI Core service.
 * @param endpointOptions - The options to call an endpoint.
 * @param data - The input parameters for the request.
 * @param requestConfig - The request configuration.
 * @param destination - The destination to use for the request.
 * @returns The {@link HttpResponse} from the AI Core service.
 */
export declare function executeRequest(endpointOptions: EndpointOptions, data: any, requestConfig?: CustomRequestConfig, destination?: HttpDestinationOrFetchOptions): Promise<HttpResponse>;
/**
 * Get target url with endpoint path appended.
 * Append path `v2` if the url contains empty pathname `/`.
 * @param url - The url, e.g., `http://example.com` or `http://example.com:8000/abc`.
 * @param endpointPath - The path to the endpoint, e.g., `/some/endpoint`.
 * @returns Target url combining the url and endpoint path.
 * @internal
 */
export declare function getTargetUrl(url: string, endpointPath: string): string;
//# sourceMappingURL=http-client.d.ts.map